#!/usr/bin/env python
import sys
import argparse
from repoman_client.parsers import repoman_cli
from repoman_client.subcommands.help import Help
from repoman_client.subcommands.version import Version
from repoman_client.subcommands.config import MakeConfig
from repoman_client.subcommands.describe import DescribeImage
from repoman_client.subcommands.describe import DescribeUser
from repoman_client.subcommands.describe import DescribeGroup
from repoman_client.subcommands.diagnostic import Whoami
from repoman_client.subcommands.diagnostic import About
from repoman_client.subcommands.create import CreateImage
from repoman_client.subcommands.create import CreateUser
from repoman_client.subcommands.create import CreateGroup
from repoman_client.subcommands.group_membership import AddUserToGroup
from repoman_client.subcommands.group_membership import RemoveUserFromGroup
from repoman_client.subcommands.listing import ListUsers
from repoman_client.subcommands.listing import ListGroups
from repoman_client.subcommands.listing import ListImages

# Add all subcommands here:
repoman_cli.add_subcommand(Help())
repoman_cli.add_subcommand(Version())
repoman_cli.add_subcommand(MakeConfig())
repoman_cli.add_subcommand(DescribeUser())
repoman_cli.add_subcommand(DescribeImage())
repoman_cli.add_subcommand(DescribeGroup())
repoman_cli.add_subcommand(Whoami())
repoman_cli.add_subcommand(About())
repoman_cli.add_subcommand(CreateImage())
repoman_cli.add_subcommand(CreateUser())
repoman_cli.add_subcommand(CreateGroup())
repoman_cli.add_subcommand(AddUserToGroup())
repoman_cli.add_subcommand(RemoveUserFromGroup())
repoman_cli.add_subcommand(ListUsers())
repoman_cli.add_subcommand(ListGroups())
repoman_cli.add_subcommand(ListImages())

# Ask the parser and subparsers to parse the command line arguments.
args = repoman_cli.get_arg_parser().parse_args()

# Run the subcommand function
args.func(args)

# We're done!
sys.exit(0)

# If we decide to go with this OO approach, the rest of this file will have to
# be moved to individual subcommand classes.  See MakeConfig and Help for
# examples.





# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#                             Image Manipulation Subcommands                          #
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #



# Subcommand: get-image
p_get_image = sp.add_parser('get-image', add_help=False)
p_get_image.add_argument('image') 
p_get_image.add_argument('-o', '--owner')
p_get_image.add_argument('-p', '--path')
#p_get_image.set_defaults(func=gi)

p_gi = sp.add_parser('gi', add_help=False, parents=[p_get_image])
#p_gi.set_defaults(func=gi)


# Subcommand: modify-image
p_modify_image = sp.add_parser('modify-image', add_help=False)
p_modify_image.add_argument('image') 
p_modify_image.add_argument('-o', '--owner')
p_modify_image.add_argument('-d', '--description')
p_modify_image.add_argument('--os_variant')
p_modify_image.add_argument('--os_arch')
p_modify_image.add_argument('--os_type')
p_modify_image.add_argument('--hypervisor')
p_modify_image.add_argument('-u', '--unauthenticated_access', choices=['True', 'False'])
p_modify_image.add_argument('-n', '--new_name')
#p_modify_image.set_defaults(func=mi)

p_mi = sp.add_parser('mi', add_help=False, parents=[p_modify_image])
#p_mi.set_defaults(func=mi)

# Subcommand: put-image
p_put_image = sp.add_parser('put-image', add_help=False)
p_put_image.add_argument('file')
p_put_image.add_argument('image')
p_put_image.add_argument('-o', '--owner')
#p_put_image.set_defaults(func=pi)

p_pi = sp.add_parser('pi', add_help=False, parents=[p_put_image])
#p_pi.set_defaults(func=pi)

# Subcommand: remove-image
p_remove_image = sp.add_parser('remove-image', add_help=False)
p_remove_image.add_argument('image')
p_remove_image.add_argument('-o', '--owner')
p_remove_image.add_argument('-f', '--force', action='store_const', const='yes')
#p_remove_image.set_defaults(func=ri)

p_ri = sp.add_parser('ri', add_help=False, parents=[p_remove_image])
#p_ri.set_defaults(func=ri)

# Subcommand: save-image
p_save_image = sp.add_parser('save-image', add_help=False)
p_save_image.add_argument('image')
p_save_image.add_argument('-o', '--owner')
p_save_image.add_argument('-f', '--force', action='store_const', const='yes')
p_save_image.add_argument('--gzip', action='store_const', const='yes')
p_save_image.add_argument('--resize', type=int)
p_save_image.add_argument('--verbose', action='store_const', const='yes')
p_save_image.add_argument('--clean', action='store_const', const='yes')
p_save_image.add_argument('-d', '--description')
p_save_image.add_argument('--os_variant')
p_save_image.add_argument('--os_arch')
p_save_image.add_argument('--os_type')
p_save_image.add_argument('--hypervisor')
p_save_image.add_argument('-u', '--unauthenticated_access', choices=['True', 'False'])
#p_save_image.set_defaults(func=si)

p_si = sp.add_parser('si', add_help=False, parents=[p_save_image])
#p_si.set_defaults(func=si)

# Subcommand: share-image-with-groups
p_share_image_with_groups = sp.add_parser('share-image-with-groups', add_help=False)
p_share_image_with_groups.add_argument('image')
p_share_image_with_groups.add_argument('-o', '--owner')
p_share_image_with_groups.add_argument('groups', nargs='+')
#p_share_image.set_defaults(func=sig)

p_sig = sp.add_parser('sig', add_help=False, parents=[p_share_image_with_groups])
#p_sig.set_defaults(func=sig)

# Subcommand: share-image-with-users
p_share_image_with_users = sp.add_parser('share-image-with-users', add_help=False)
p_share_image_with_users.add_argument('image')
p_share_image_with_users.add_argument('-o', '--owner')
p_share_image_with_users.add_argument('users', nargs='+')
#p_share_image.set_defaults(func=siu)

p_siu = sp.add_parser('siu', add_help=False, parents=[p_share_image_with_users])
#p_siu.set_defaults(func=siu)

# Subcommand: unshare-image-from-groups
p_unshare_image_from_groups = sp.add_parser('unshare-image-from-groups', add_help=False)
p_unshare_image_from_groups.add_argument('image')
p_unshare_image_from_groups.add_argument('-o', '--owner')
p_unshare_image_from_groups.add_argument('groups', nargs='+')
#p_unshare_image.set_defaults(func=uig)

p_uig = sp.add_parser('uig', add_help=False, parents=[p_unshare_image_from_groups])
#p_uig.set_defaults(func=uig)

# Subcommand: unshare-image-from-users
p_unshare_image_from_users = sp.add_parser('unshare-image-from-users', add_help=False)
p_unshare_image_from_users.add_argument('image')
p_unshare_image_from_users.add_argument('-o', '--owner')
p_unshare_image_from_users.add_argument('users', nargs='+')
#p_unshare_image.set_defaults(func=uiu)

p_uiu = sp.add_parser('uiu', add_help=False, parents=[p_unshare_image_from_users])
#p_uiu.set_defaults(func=uiu)

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#                             User Manipulation Subcommands                           #
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# Subcommand: modify-user
p_modify_user = sp.add_parser('modify-user', add_help=False)
p_modify_user.add_argument('user')
p_modify_user.add_argument('client_dn')
p_modify_user.add_argument('-f', '--full_name')
p_modify_user.add_argument('-e', '--email')
p_modify_user.add_argument('-n', '--new_name')
#p_modify_user.set_defaults(func=mu)

p_mu = sp.add_parser('mu', add_help=False, parents=[p_modify_user])
#p_mu.set_defaults(func=mu)

# Subcommand: remove-user
p_remove_user = sp.add_parser('remove-user', add_help=False)
p_remove_user.add_argument('user')
p_remove_user.add_argument('-f', '--force', action='store_const', const='yes')
#p_remove_user.set_defaults(func=ru)

p_ru = sp.add_parser('ru', add_help=False, parents=[p_remove_user])
#p_ru.set_defaults(func=ru)

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#                             Group Manipulation Subcommands                          #
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Subcommand: add-permissions-to-group
p_add_permissions_to_group = sp.add_parser('add-permissions-to-group', add_help=False)
p_add_permissions_to_group.add_argument('group')
p_add_permissions_to_group.add_argument('permissions', nargs='+')
#p_add_permissions_to_group.set_defaults(func=apg)

p_apg = sp.add_parser('apg', add_help=False, parents=[p_add_permissions_to_group])
#p_apg.set_defaults(func=apg)






# Subcommand: modify-group
p_modify_group = sp.add_parser('modify-group', add_help=False)
p_modify_group.add_argument('group')
p_modify_group.add_argument('-u', '--users', nargs='+')
p_modify_group.add_argument('-p', '--permissions', nargs='+')
#p_modify_group.set_defaults(func=mg)

p_mg = sp.add_parser('mg', add_help=False, parents=[p_modify_group])
#p_mg.set_defaults(func=mg)

# Subcommand: remove-group
p_remove_group = sp.add_parser('remove-group', add_help=False)
p_add_users_to_group.add_argument('group')
#p_remove_group.set_defaults(func=rg)

p_rg = sp.add_parser('rg', add_help=False, parents=[p_remove_group])
#p_rg.set_defaults(func=rg)

# Subcommand: remove-permissions-from-group
p_remove_permissions_from_group = sp.add_parser('remove-permissions-from-group', add_help=False)
p_remove_permissions_from_group.add_argument('group')
p_remove_permissions_from_group.add_argument('permissions', nargs='+')
#p_remove_permissions_from_group.set_defaults(func=rpg)

p_rpg = sp.add_parser('rpg', add_help=False, parents=[p_remove_permissions_from_group])
#p_rpg.set_defaults(func=rpg)


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#                               Miscellaneous Subcommands                             #
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


args = p.parse_args()
args.func(args)
